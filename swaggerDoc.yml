swagger: "2.0"
info:
  description: "Image album service for managing image album"
  version: "1.0.0"
  title: "Swagger ImageAlbum"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v1"
schemes:
- "https"
- "http"
paths:
  /image/album:
    post:
      tags:
      - "Post Image Album"
      summary: "create new image album"
      description: "create new image album"
      operationId: "addImageAlbum"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Image album object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/ImageAlbum"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "OK"
          schema:
            $ref: '#/definitions/PostImageResponse'
      security:
      - imagestore_auth:
        - "write:image"
        - "read:image"
  /image/album/{imageAlbumName}:  
    delete:
      tags:
      - "Delete Image album by album name"
      summary: "Deletes an image album based album name"
      description: "Deletes an image album based album name"
      operationId: "deleteImage"
      produces:
      - "application/json"
      parameters:
      - name: "imageAlbumName"
        in: "path"
        description: "Image Album name to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: '#/definitions/PostImageResponse'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Image not found"
      security:
      - imagestore_auth:
        - "write:image"
        - "read:image"
    
securityDefinitions:
  imagestore_auth:
    type: "oauth2"
    authorizationUrl: "http://imageStore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:image: "modify images in album"
      read:image: "read images"
definitions:
  ImageAlbum:
    type: "object"
    required:
    - "imageAlbumName"
    properties:
      imageAlbumName:
        type: "string"
        example: "myAlbum"
    xml:
      name: "Image"
      
  PostImageResponse:
    type: "object"
    properties:
      code:
        type: "string"
        example: "200"
      type:
        type: "string"
        example: "OK"
      message:
        type: "string"
        example: "successfull"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
